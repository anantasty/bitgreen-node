name: Ci-test-and-build
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  check:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    system:
      debug: true
    # cancel concurrent builds on the same branch
    concurrency:
      group: ${{ github.head_ref || github.run_id }}
      cancel-in-progress: true

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set-Up
        run: sudo apt install -y cmake pkg-config libssl-dev git build-essential clang libclang-dev curl

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-05-15
          components: rustfmt
          target: wasm32-unknown-unknown
          default: true

      - name: Install toolchain x86
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-05-15
          components: rustfmt
          target: x86_64-unknown-linux-gnu
          default: true
      - name: Cache restore
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cargo format
        run: pwd &&cargo fmt --all -- --check

      - name: Cargo check
        run: SKIP_WASM_BUILD=1 cargo check --release

      - name: Run clippy
        run: |
          rustup component add clippy --toolchain nightly-2022-05-15-x86_64-unknown-linux-gnu
          cargo clippy --all-targets --workspace -- --deny warnings

      - name: Cargo test
        run: cargo test

      - name: Check check benchmarking
        run: cargo check --features=runtime-benchmarks --release

      # Run cargo build release on github runner and cache it for next run to speed up the builds
      - name: Cargo build release
        run: |
          cargo build --release
