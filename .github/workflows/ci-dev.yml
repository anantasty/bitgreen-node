name: Ci-test-and-build
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 4096
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'

      - name: Checkout code
        uses: actions/checkout@v3
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.0.0
        with:
          cache-on-failure: true

      - name: Set-Up
        run: sudo apt install -y cmake pkg-config libssl-dev git build-essential clang libclang-dev curl 

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-05-15
          components: rustfmt
          target: wasm32-unknown-unknown
          default: true

      - name: Install toolchain x86
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-05-15
          components: rustfmt
          target: x86_64-unknown-linux-gnu
          default: true
  build_polkadot:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout Polkadot
        uses: actions/checkout@v3
        with:
          repository: paritytech/polkadot
          ref: "v0.9.26"
          path: "polkadot"
      - name: build polkadot
        run: cd polkadot && ./scripts/init.sh && cargo build --release

      - name: List polkadot install
        run: ls
  check:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [setup]
    # cancel concurrent builds on the same branch
    concurrency:
      group: ${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
    steps:
      - name: Cargo format
        run: pwd && cargo fmt --all -- --check

      - name: Cargo check
        run: SKIP_WASM_BUILD=1 cargo check --release

      - name: Run clippy
        run: |
          rustup component add clippy --toolchain nightly-2022-05-15-x86_64-unknown-linux-gnu
          cargo clippy --all-targets --workspace -- --deny warnings

      - name: Cargo test
        run: cargo test

      - name: Check check benchmarking
        run: cargo check --features=runtime-benchmarks --release

  build:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      # Run cargo build release on github runner and cache it for next run to speed up the builds
      - name: Cargo build release
        run: |
          cargo build --release
  deploy:
    runs-on: ubuntu-latest
    needs: [check, build_polkadot, build]
    steps: 
      - name: copy file via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: root
          key: ${{ secrets.SSH_PRIV }}
          source: "target/release/bitg-parachain"
          target: "bitg-parachain"
      - name: copy polkadot via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: root
          key: ${{ secrets.SSH_PRIV }}
          source: "polkadot/target/release/bitg-parachain"
          target: "polkadot"
      - name: ssh and generate config
        run: polkadot build-spec --chain rococo-local --disable-default-bootnode --raw > rococo-local-cfde.json
      - name: ssh and start
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: root
          key: ${{ secrets.SSH_PRIV }}
          source: "target/release/bitg-parachain"
          target: "bitg-parachain"
          script: ls && sudo apt install supervisor
